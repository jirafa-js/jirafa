@use './tools' as *;
@use './settings' as *;
@use 'sass:map';

:root {
  // Colors
  @each $type in map.keys($colors) {
    $color: map.get($colors, $type, 'base');

    @if ($color != null) {
      @include set-css-var(('color', $type, 'rgb'), get-rgb($color));
      @include set-css-var(('color', $type), $color);
    }

    // @each $i in ('1', '4', '6', '8') {
    //   @include set-css-var(('color', $type, $i), map.get($colors, $type, $i));
    // }
  }
  @include set-css-var-by-map(color, $colors);
  @include set-css-var-by-map(color, $shades);

  @include set-css-var-by-map(
    'color',
    (
      'bg': (
        '': map.get($shades, 'white'),
        'page': get-css-var('color', 'fill', 'base'),
        'overlay': map.get($shades, 'white'),
      ),
    )
  );

  // Borders
  @include set-css-var-by-map(
    border,
    (
      '': $borders,
      'radius': $border-radiuses,
      'color': get-rgb(#000),
      'opacity': 0.12,
    )
  );

  // Opacity
  @include set-css-var-by-map('opacity', $states);
  // Spaces
  @include set-css-var-by-map('spacer', $spacers);
  // Transition
  @include set-css-var-by-map(
    'transition',
    (
      easing: $transition-easing,
      duration: $transition-duration,
    )
  );

  // Texts
  @include set-css-var-by-map('text-color', $font-colors);

  // Theme
  @include set-theme(
    (
      'light': get-rgb(#fff),
      'dark': get-rgb(#000),
      'on': (
        'light': get-rgb(#000),
        'dark': get-rgb(#fff),
      ),
    )
  );
}
