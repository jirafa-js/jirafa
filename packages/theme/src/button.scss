@use 'sass:math';
@use 'sass:map';
@use './settings' as *;
@use './tools' as *;
@use './components/buttons' as *;

@include b('button') {
  @include set-css-var-by-map('button', $button-vars);
}

@include b('button') {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  outline: none;
  -webkit-appearance: none;
  border-radius: $button-border-radius;
  height: get-css-var('button', 'height');
  font-size: get-css-var('button', 'font-size');
  font-weight: $button-font-weight;
  color: get-css-var('button', 'text-color');
  background-color: get-css-var('button', 'bg-color');

  white-space: nowrap;
  text-align: center;
  vertical-align: middle;

  user-select: none;
  cursor: pointer;

  @include e(text) {
    display: inline-flex;
    text-align: center;
  }

  @include e(overlay) {
    @include overlay(
      get-css-var('button', 'overlay-opacity'),
      -$button-border-width
    );
  }

  @include e(underlay) {
    @include overlay(0, -$button-border-width);
  }

  @include m('secondary', 'dashed') {
    > .#{be('button', 'underlay')} {
      opacity: get-css-var('opacity', 'activated');
    }
  }

  [class*='#{b(icon)}'] + .#{be(button, text)} {
    margin-left: map.get($spacers, 2);
  }

  svg {
    width: 1em;
    height: 1em;
  }

  @include border($button-border...);
  @include states(('button', 'overlay-opacity'));
  @include button-size();
  @include button-status();

  &::after {
    @include absolute(-$button-border-width, true);
    pointer-events: none;
    outline: 2px solid get-css-var('button', 'outline-color');
    outline-offset: 1px;
    border-radius: inherit;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
  }

  &:focus-visible {
    &::after {
      opacity: 0.5;
    }
  }

  @include m('round') {
    border-radius: map.get($border-radiuses, 'round');
  }
  @include m('circle') {
    min-width: 0;
    width: get-css-var('button', 'height');
    border-radius: map.get($border-radiuses, 'circle');
  }
  @include is('only-icon') {
    min-width: 0;
    width: get-css-var('button', 'height');
  }

  @include is('block') {
    display: flex;
    min-width: 100%;
  }

  @include is('disabled') {
    opacity: get-css-var('opacity', 'disabled');
    cursor: not-allowed;

    @include set-css-var(('button', 'overlay-opacity'), 0);
  }
}
